// Given a keypad as shown in the diagram, and an array arr[ ], your task is to list all possible words in any order which can be generated by pressing numbers from array.





#include <bits/stdc++.h>
using namespace std;

class Array {
  public:
    template <class T>
    static void input(vector<T> &A, int n) {
        for (int i = 0; i < n; i++) {
            scanf("%d ", &A[i]);
        }
    }

    template <class T>
    static void print(vector<T> &A) {
        for (int i = 0; i < A.size(); i++) {
            cout << A[i] << " ";
        }
        cout << endl;
    }
};

class Solution {
  public:
    void PossibleWord (vector<int> &arr, int index, string &prefix,vector<string> &padMap,vector<string> &res){
        if(index == arr.size()){
            res.push_back(prefix);
            return;
        }
        
        int digit = arr[index];
        if(digit < 2 || digit > 9){
            PossibleWord(arr,index + 1, prefix,padMap,res);
            return;
        }
        
        for(char ch: padMap[digit]){
            prefix.push_back(ch);
            PossibleWord(arr,index + 1, prefix, padMap, res);
            prefix.pop_back();
        }
    }
    
    vector<string> possibleWords(vector<int> &arr) {
        vector<string> res;
        vector<string> padMap = {"", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};
        string prefix = "";
        PossibleWord(arr,0,prefix,padMap,res);
        return res;
    }
};

int main() {
    int t;
    scanf("%d ", &t);
    while (t--) {
        vector<int> a;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            a.push_back(number);
        }

        Solution obj;
        vector<string> v = obj.possibleWords(a);
        sort(v.begin(), v.end());
        Array::print(v);
        cout << "~" << endl;
    }
}